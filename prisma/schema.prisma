// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Bank {
  HDFC
  ICICI
  Bajaj
  Hero
  AdityaBirla
  YesBank
  AxisBank
  SMFG
  TATA
  LendingKart
  Poonawalla
  IIFL
  AxisFinance
  Chola
  Indifi
  Faircent
  CreditSession
  Mahindra
  LT
  Mas
  Trucap
  Godrej
  Finnable
  Piramal
  JanaBank
  Awas
  Shubam
  LICHousing
  UGRO
  FedBank
  SMC
  Flexi
  Clix
  Indusand 
  Airthmat
  IDFC
  Paysense
  Indiabulls
  Sitara
  Vastu
  HDB
}

enum Status {
  Login
  Disbursed
  Approved
  Rejected
  UnderwritingOrVerfication
}

enum Type {
  PL
  BL
  LAP
  HL
  Doctor
}

model DataPoint {
  id            String   @id @default(cuid())
  name          String
  mobile        String
  email         String?
  executiveName String
  bank          Bank
  type          Type
  remarks       String?
  amount        Float?
  status        Status
  statusUpdate  DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  state         String?
  location      String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([mobile, userId, bank])
  @@index([userId])
}

enum Role {
  ADMIN
  NORMAL
  SUPERVISOR
}

model User {
  id String @id @unique

  username String @unique
  role     Role

  auth_session         Session[]
  key                  Key[]
  assignedBanks        Json?
  assignedProductTypes Json?
  dataPoints           DataPoint[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
